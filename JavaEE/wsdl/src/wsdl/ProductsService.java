
package wsdl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.7-b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ProductsService", targetNamespace = "http://service.enterprise.solovev.xyz/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ProductsService {


    /**
     * 
     * @param id
     * @return
     *     returns wsdl.ProductsDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductById", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetProductById")
    @ResponseWrapper(localName = "getProductByIdResponse", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetProductByIdResponse")
    public ProductsDTO getProductById(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param category
     * @return
     *     returns java.util.List<wsdl.ProductsDTO>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductsByCategory", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetProductsByCategory")
    @ResponseWrapper(localName = "getProductsByCategoryResponse", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetProductsByCategoryResponse")
    public List<ProductsDTO> getProductsByCategory(
        @WebParam(name = "category", targetNamespace = "")
        String category);

    /**
     * 
     * @return
     *     returns wsdl.ResultDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createProduct", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.CreateProduct")
    @ResponseWrapper(localName = "createProductResponse", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.CreateProductResponse")
    public ResultDTO createProduct();

    /**
     * 
     * @param name
     * @return
     *     returns wsdl.ProductsDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getProductsByName", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetProductsByName")
    @ResponseWrapper(localName = "getProductsByNameResponse", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetProductsByNameResponse")
    public ProductsDTO getProductsByName(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @return
     *     returns java.util.List<wsdl.ProductsDTO>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllProducts", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetAllProducts")
    @ResponseWrapper(localName = "getAllProductsResponse", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.GetAllProductsResponse")
    public List<ProductsDTO> getAllProducts();

    /**
     * 
     * @param id
     * @return
     *     returns wsdl.ResultDTO
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "removeProductById", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.RemoveProductById")
    @ResponseWrapper(localName = "removeProductByIdResponse", targetNamespace = "http://service.enterprise.solovev.xyz/", className = "wsdl.RemoveProductByIdResponse")
    public ResultDTO removeProductById(
        @WebParam(name = "id", targetNamespace = "")
        String id);

}
